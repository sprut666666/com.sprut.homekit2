import Characteristic from '../characteristic';
import { OnWrite } from '../characteristic';
import Service from '../service';
export declare function AccessoryFlags(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function Active(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function AdministratorOnlyAccess(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function AirParticulateDensity(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function AirParticulateSize(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function AirQuality(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function AudioFeedback(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function BatteryLevel(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function Brightness(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CarbonDioxideDetected(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CarbonDioxideLevel(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CarbonDioxidePeakLevel(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CarbonMonoxideDetected(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CarbonMonoxideLevel(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CarbonMonoxidePeakLevel(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function ChargingState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function ColorTemperature(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function ContactSensorState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CoolingThresholdTemperature(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentAirPurifierState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentAmbientLightLevel(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentDoorState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentFanState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentHeaterCoolerState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentHeatingCoolingState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentHorizontalTiltAngle(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentHumidifierDehumidifierState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentPosition(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentRelativeHumidity(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentSlatState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentTemperature(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentTiltAngle(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function CurrentVerticalTiltAngle(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function DigitalZoom(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function FilterChangeIndication(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function FilterLifeLevel(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function FirmwareRevision(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function HardwareRevision(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function HeatingThresholdTemperature(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function HoldPosition(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function Hue(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function Identify(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function ImageMirroring(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function ImageRotation(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function LeakDetected(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function LockControlPoint(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function LockCurrentState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function LockLastKnownAction(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function LockManagementAutoSecurityTimeout(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function LockPhysicalControls(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function LockTargetState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function Logs(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function Manufacturer(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function Model(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function MotionDetected(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function Mute(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function Name(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function NightVision(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function NitrogenDioxideDensity(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function ObstructionDetected(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function OccupancyDetected(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function On(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function OpticalZoom(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function OutletInUse(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function OzoneDensity(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function PairSetup(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function PairVerify(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function PairingFeatures(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function PairingPairings(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function PM10Density(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function PM25Density(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function PositionState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function ProgrammableSwitchEvent(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function RelativeHumidityDehumidifierThreshold(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function RelativeHumidityHumidifierThreshold(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function ResetFilterIndication(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function RotationDirection(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function RotationSpeed(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function Saturation(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SecuritySystemAlarmType(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SecuritySystemCurrentState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SecuritySystemTargetState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SelectedRTPStreamConfiguration(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SerialNumber(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function ServiceLabelIndex(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function ServiceLabelNamespace(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SetupEndpoints(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SlatType(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SmokeDetected(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function StatusActive(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function StatusFault(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function StatusJammed(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function StatusLowBattery(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function StatusTampered(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function StreamingStatus(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SulphurDioxideDensity(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SupportedAudioStreamConfiguration(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SupportedRTPConfiguration(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SupportedVideoStreamConfiguration(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function SwingMode(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetAirPurifierState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetAirQuality(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetDoorState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetFanState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetHeaterCoolerState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetHeatingCoolingState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetHorizontalTiltAngle(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetHumidifierDehumidifierState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetPosition(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetRelativeHumidity(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetSlatState(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetTemperature(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetTiltAngle(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TargetVerticalTiltAngle(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function TemperatureDisplayUnits(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function Version(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function VOCDensity(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function Volume(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function WaterLevel(ID: number, value: any, onWrite?: OnWrite): Characteristic;
export declare function AccessoryInformation(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function AirPurifier(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function AirQualitySensor(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function BatteryService(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function CameraRTPStreamManagement(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function CarbonDioxideSensor(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function CarbonMonoxideSensor(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function ContactSensor(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function Door(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function Doorbell(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function Fan(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function Fanv2(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function FilterMaintenance(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function GarageDoorOpener(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function HeaterCooler(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function HumidifierDehumidifier(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function HumiditySensor(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function LeakSensor(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function LightSensor(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function Lightbulb(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function LockManagement(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function LockMechanism(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function Microphone(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function MotionSensor(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function OccupancySensor(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function Outlet(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function SecuritySystem(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function ServiceLabel(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function Slat(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function SmokeSensor(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function Speaker(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function StatelessProgrammableSwitch(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function Switch(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function TemperatureSensor(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function Thermostat(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function Window(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
export declare function WindowCovering(ID: number, characteristics: Characteristic[], isHidden?: boolean, isPrimary?: boolean, linkedServices?: number[], checkCharacteristics?: boolean): Service;
